{"ast":null,"code":"var _jsxFileName = \"E:\\\\GA2\\\\GAA3\\\\frontend\\\\src\\\\components\\\\GoogleAuth.js\";\nimport React from 'react';\nimport { GoogleLogin } from '@react-oauth/google';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GoogleAuth = ({\n  setAuthToken\n}) => {\n  const handleLoginSuccess = async response => {\n    const {\n      code\n    } = response;\n\n    // Send authorization code to the backend to exchange for tokens\n    try {\n      const res = await fetch('http://localhost:3000/api/auth/exchange', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          code\n        }) // Send the authorization code to the backend\n      });\n      if (res.ok) {\n        const tokens = await res.json();\n        localStorage.setItem('access_token', tokens.access_token);\n        localStorage.setItem('refresh_token', tokens.refresh_token);\n        setAuthToken(tokens.access_token); // Pass access token to parent component\n      }\n    } catch (error) {\n      console.error('Error during Google login', error);\n    }\n  };\n  const handleLoginFailure = error => {\n    console.error('Google Login Failure:', error);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      onSuccess: handleLoginSuccess,\n      onError: handleLoginFailure,\n      useOneTap: true // Optional: Use One-Tap login feature\n      ,\n      scope: \"https://www.googleapis.com/auth/analytics.readonly\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = GoogleAuth;\nexport default GoogleAuth;\nvar _c;\n$RefreshReg$(_c, \"GoogleAuth\");","map":{"version":3,"names":["React","GoogleLogin","jsxDEV","_jsxDEV","GoogleAuth","setAuthToken","handleLoginSuccess","response","code","res","fetch","method","headers","body","JSON","stringify","ok","tokens","json","localStorage","setItem","access_token","refresh_token","error","console","handleLoginFailure","children","onSuccess","onError","useOneTap","scope","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/GA2/GAA3/frontend/src/components/GoogleAuth.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nconst GoogleAuth = ({ setAuthToken }) => {\r\n  const handleLoginSuccess = async (response) => {\r\n    const { code } = response;\r\n\r\n    // Send authorization code to the backend to exchange for tokens\r\n    try {\r\n      const res = await fetch('http://localhost:3000/api/auth/exchange', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ code }),  // Send the authorization code to the backend\r\n      });\r\n\r\n      if (res.ok) {\r\n        const tokens = await res.json();\r\n        localStorage.setItem('access_token', tokens.access_token);\r\n        localStorage.setItem('refresh_token', tokens.refresh_token);\r\n        setAuthToken(tokens.access_token);  // Pass access token to parent component\r\n      }\r\n    } catch (error) {\r\n      console.error('Error during Google login', error);\r\n    }\r\n  };\r\n\r\n  const handleLoginFailure = (error) => {\r\n    console.error('Google Login Failure:', error);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n        onSuccess={handleLoginSuccess}\r\n        onError={handleLoginFailure}\r\n        useOneTap  // Optional: Use One-Tap login feature\r\n        scope=\"https://www.googleapis.com/auth/analytics.readonly\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoogleAuth;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACvC,MAAMC,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;IAC7C,MAAM;MAAEC;IAAK,CAAC,GAAGD,QAAQ;;IAEzB;IACA,IAAI;MACF,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;QACjEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEP;QAAK,CAAC,CAAC,CAAG;MACnC,CAAC,CAAC;MAEF,IAAIC,GAAG,CAACO,EAAE,EAAE;QACV,MAAMC,MAAM,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;QAC/BC,YAAY,CAACC,OAAO,CAAC,cAAc,EAAEH,MAAM,CAACI,YAAY,CAAC;QACzDF,YAAY,CAACC,OAAO,CAAC,eAAe,EAAEH,MAAM,CAACK,aAAa,CAAC;QAC3DjB,YAAY,CAACY,MAAM,CAACI,YAAY,CAAC,CAAC,CAAE;MACtC;IACF,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,MAAME,kBAAkB,GAAIF,KAAK,IAAK;IACpCC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EAC/C,CAAC;EAED,oBACEpB,OAAA;IAAAuB,QAAA,eACEvB,OAAA,CAACF,WAAW;MACV0B,SAAS,EAAErB,kBAAmB;MAC9BsB,OAAO,EAAEH,kBAAmB;MAC5BI,SAAS,OAAE;MAAA;MACXC,KAAK,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GArCI/B,UAAU;AAuChB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}